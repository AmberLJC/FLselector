// GRPC definition for the communication between the aggregator and the executors.
// After modifying this file, run
// $ python -m grpc_tools.protoc -I../communication/ --python_out=.. --grpc_python_out=.. job_api.proto
// from FedScale/core/evals to regenerate Python files.
syntax = "proto3";

package fedscale;

service JobService {
    rpc UpdateModel (UpdateModelRequest) returns (UpdateModelResponse) {}
    rpc Train (TrainRequest) returns (TrainResponse) {}
    rpc Fetch (FetchRequest) returns (FetchResponse) {}
    rpc Stop (StopRequest) returns (StopResponse) {}
    rpc ReportExecutorInfo (ReportExecutorInfoRequest) returns (ReportExecutorInfoResponse) {}
    rpc Test (TestRequest) returns (TestResponse) {}
}

message UpdateModelRequest {
    bytes serialized_tensor = 1;  // TODO: Change it to TensorProto
}

message UpdateModelResponse {
    string message = 1;
}

message TrainRequest {
    uint64 client_id = 1;
    bytes serialized_train_config = 2;
}

message TrainResponse {
    bytes serialized_train_response = 1;
}

message FetchRequest {
    uint64 client_id = 1;
}

message FetchResponse {
    bytes serialized_fetch_response = 1;
}

message StopRequest {}

message StopResponse {}

message ReportExecutorInfoRequest {}

message ReportExecutorInfoResponse {
    repeated int64 training_set_size = 1;
}

message TestRequest {
    string message = 1;
}

message TestResponse {
    bytes serialized_test_response = 1;
}
